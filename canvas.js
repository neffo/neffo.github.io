
const canvas = document.getElementById("test");
const text = document.getElementById("rotation");
const ctx = canvas.getContext("2d");
let timer = null;
let step = 0; 

const lines = [
	// right-hand with thumb pointed towards us
	
	// outside, bottom
	{ x1: -102, y1: -72, z1: 0, x2: 102, y2: -72, z2: 0, s1: 6, s2: 270, s3: -1, s4: -1 },
	{ x1: 102, y1: -72, z1: 0, x2: 102, y2: 72, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 102, y1: 72, z1: 0, x2: -102, y2: 72, z2: 0, s1: 90, s2: 360, s3: -1, s4: -1 },
	{ x1: -102, y1: 72, z1: 0, x2: -102, y2: -72, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },

	// top and crease
	{ x1: -102, y1: -72, z1: 25, x2: 102, y2: -72, z2: 25, s1: 0, s2: 174, s3: 271, s4: 360 },
	{ x1: 102, y1: -72, z1: 25, x2: 102, y2: -8, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: -102, y1: -72, z1: 25, x2: -102, y2: -8, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: -102, y1: -8, z1: 25, x2: 102, y2: -8, z2: 25, s1: 0, s2: 88, s3: 257, s4: 360 },
	
	// amiga text
	// move x by 10 for a vertical line
	// move x by ~27 for a sloped line
	
	// a
	// 795, 270 -> 822, 232 -> 830, 270; 805, 257 -> 825, 257
	{ x1: 92, y1: -20, z1: 25, x2: 90, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 76, y1: -20, z1: 25, x2: 90, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 81.5, y1: -26, z1: 25, x2: 91, y2: -26, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	
	// g
	{ x1: 70, y1: -26, z1: 25, x2: 76, y2: -26, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 73, y1: -26, z1: 25, x2: 73, y2: -20, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 64, y1: -20, z1: 25, x2: 73, y2: -20, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 64, y1: -20, z1: 25, x2: 58, y2: -26, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 58, y1: -26, z1: 25, x2: 70, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 70, y1: -35, z1: 25, x2: 76, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 76, y1: -35, z1: 25, x2: 76, y2: -32, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	
	// i
	{ x1: 53, y1: -20, z1: 25, x2: 57, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	
	// m
	{ x1: 48, y1: -20, z1: 25, x2: 50, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 36, y1: -20, z1: 25, x2: 50, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 36, y1: -20, z1: 25, x2: 34, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 29, y1: -20, z1: 25, x2: 34, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	
	// a
	{ x1: 27, y1: -20, z1: 25, x2: 25, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 11, y1: -20, z1: 25, x2: 25, y2: -35, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: 16.5, y1: -26, z1: 25, x2: 26, y2: -26, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	
	// horizontal lines
	{ x1: -102, y1: -48, z1: 25, x2: 92, y2: -48, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: -102, y1: -56, z1: 25, x2: 92, y2: -56, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	{ x1: -102, y1: -64, z1: 25, x2: 92, y2: -64, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	//{ x1: -102, y1: -72, z1: 25, x2: 92, y2: -72, z2: 25, s1: 0, s2: 88, s3: 271, s4: 360 },
	
	
	// neffo text
	
	//original
	/*
	
	// n
	{ x1: 27, y1: -14, z1: 0, x2: 27, y2: -48, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 27, y1: -21, z1: 0, x2: 42, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 42, y1: -15, z1: 0, x2: 51, y2: -25, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 51, y1: -25, z1: 0, x2: 51, y2: -48, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	// e
	{ x1: 66, y1: -30, z1: 0, x2: 92, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 80, y1: -15, z1: 0, x2: 92, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 66, y1: -30, z1: 0, x2: 80, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 66, y1: -30, z1: 0, x2: 78, y2: -48, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 78, y1: -48, z1: 0, x2: 92, y2: -45, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	// f
	{ x1: 101, y1: -15, z1: 0, x2: 141, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 108, y1: -48, z1: 0, x2: 108, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 108, y1: -15, z1: 0, x2: 112, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 112, y1: -3, z1: 0, x2: 121, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 130, y1: -48, z1: 0, x2: 130, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 130, y1: -15, z1: 0, x2: 134, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 134, y1: -3, z1: 0, x2: 143, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	// o
	{ x1: 149, y1: -30, z1: 0, x2: 162, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 162, y1: -15, z1: 0, x2: 175, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 162, y1: -48, z1: 0, x2: 175, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 162, y1: -48, z1: 0, x2: 149, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	*/
	
	// n
	{ x1: -75, y1: -14, z1: 0, x2: -75, y2: -48, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -75, y1: -21, z1: 0, x2: -60, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -60, y1: -15, z1: 0, x2: -51, y2: -25, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -51, y1: -25, z1: 0, x2: -51, y2: -48, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	// e
	{ x1: -36, y1: -30, z1: 0, x2: -10, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -22, y1: -15, z1: 0, x2: -10, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -36, y1: -30, z1: 0, x2: -22, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -36, y1: -30, z1: 0, x2: -24, y2: -48, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: -24, y1: -48, z1: 0, x2: -10, y2: -45, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	// f
	{ x1: -1, y1: -15, z1: 0, x2: 39, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 6, y1: -48, z1: 0, x2: 6, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 6, y1: -15, z1: 0, x2: 10, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 10, y1: -3, z1: 0, x2: 19, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 28, y1: -48, z1: 0, x2: 28, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 28, y1: -15, z1: 0, x2: 32, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 32, y1: -3, z1: 0, x2: 41, y2: -3, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	// o
	{ x1: 47, y1: -30, z1: 0, x2: 60, y2: -15, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 60, y1: -15, z1: 0, x2: 73, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 60, y1: -48, z1: 0, x2: 73, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	{ x1: 60, y1: -48, z1: 0, x2: 47, y2: -30, z2: 0, s1: 90, s2: 270, s3: -1, s4: -1 },
	
	
	
	

	
	

	// vertical at rear
	{ x1: -102, y1: -72, z1: 0, x2: -102, y2: -72, z2: 25, s1: 6, s2: 174, s3: -1, s4: -1 },
	{ x1: 102, y1: -72, z1: 0, x2: 102, y2: -72, z2: 25, s1: 6, s2: 174, s3: -1, s4: -1 },

	// keyboard slope
        { x1: -102, y1: 72, z1: 5, x2: 102, y2: 72, z2: 5, s1: 0, s2: 75, s3: 180, s4: 360 },
        { x1: 102, y1: 72, z1: 5, x2: 102, y2: -8, z2: 25, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: -102, y1: 72, z1: 5, x2: -102, y2: -8, z2: 25, s1: 0, s2: 75, s3: 257, s4: 360 },

	// vertical at front
	{ x1: -102, y1: 72, z1: 0, x2: -102, y2: 72, z2: 5, s1: 180, s2: 360, s3: -1, s4: -1 },
	{ x1: 102, y1: 72, z1: 0, x2: 102, y2: 72, z2: 5, s1: 180, s2: 360, s3: -1, s4: -1  },

	
	// keyboard
        { x1: -97, y1: 0, z1: 25, x2: 30, y2: 0, z2: 25, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: -97, y1: 0, z1: 25, x2: -97, y2: 62, z2: 10, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 30, y1: 0, z1: 25, x2: 30, y2: 62, z2: 10, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: -97, y1: 62, z1: 10, x2: 30, y2: 62, z2: 10, s1: 0, s2: 75, s3: 255, s4: 360 },
    /*
    
	// numkey pad
	// keyboard
        { x1: 63, y1: 20, z1: 22, x2: 97, y2: 20, z2: 22, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 63, y1: 20, z1: 22, x2: 63, y2: 62, z2: 10, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 97, y1: 20, z1: 22, x2: 97, y2: 62, z2: 10, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 63, y1: 62, z1: 10, x2: 97, y2: 62, z2: 10, s1: 0, s2: 75, s3: 255, s4: 360 },
	*/
	
	// alt pad
	    { x1: 97, y1: 0, z1: 25, x2: 36, y2: 0, z2: 25, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 97, y1: 0, z1: 25, x2: 97, y2: 62, z2: 10, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 36, y1: 0, z1: 25, x2: 36, y2: 62, z2: 10, s1: 0, s2: 75, s3: 257, s4: 360 },
        { x1: 97, y1: 62, z1: 10, x2: 36, y2: 62, z2: 10, s1: 0, s2: 75, s3: 255, s4: 360 },
	

];

function setup() {
	timer = setInterval(refresh,25);
	ctx.mozImageSmoothingEnabled = false;
}

function rot_x(x, y, r) {
	//console.log("x = "+x+" y = "+y+" r = "+r);
	let rx = 1.0 * (x * Math.cos(r)) - (y * Math.sin(r));
	//console.log("x = "+rx);
	return Math.round(rx);
}

function rot_y(x, y, r) {
	let ry = 1.0 * (x * Math.sin(r)) + (y * Math.cos(r));
	//console.log("y = "+ry);
	return Math.round(ry);
}

function spin_y(y, z, r) {
	let ry = 1.0 * (z * Math.sin(r)) + (y * Math.cos(r));
	return Math.round(ry);
}

function spin_z(y, z, r) {
	let rz = 1.0 * (z * Math.cos(r)) - (y * Math.sin(r));
	return Math.round(rz);
}


function draw_line(e, c, r) {

	let rx1 = e.x1;//rot_x(e.x1, e.y1, r);
	//let ry1 = rot_y(e.x1, e.y1, r);
	let ry1 = spin_y(e.y1, e.z1, r);
	let rx2 = e.x2; // rot_x(e.x2, e.y2, r);
	//let ry2 = rot_y(e.x2, e.y2, r);
        let ry2 = spin_y(e.y2, e.z2, r);
	let rz1 = spin_z(e.y1, e.z1, r);
	let rz2 = spin_z(e.y2, e.z2, r);

	let scale1 = (400 + rz1/2)/400.0;
	let scale2 = (400 + rz2/2)/400.0;

	/*let d1x = e.x1+c.x, d1y = e.y1+c.y;
	let d2x = e.x2+c.x, d2y = e.y2+c.y;*/

	let d1x = Math.round(rx1*scale1+c.x), d1y = Math.round(ry1*scale1+c.y);
        let d2x = Math.round(rx2*scale2+c.x), d2y = Math.round(ry2*scale2+c.y);

	ctx.beginPath();
        ctx.strokeStyle = "red";
        ctx.moveTo(d1x, d1y);
        ctx.lineTo(d2x, d2y);
        ctx.stroke();
}

function refresh() {
	ctx.clearRect(0, 0, 320, 200);
	center = { x: 320/2, y: 200/2, z: 0 };

	r = Math.PI*2*(step/360.0);

	lines.forEach( (e) => {
	    if ((!e.s1 && !e.s2 && !e.s3 && !e.s4) || (step > e.s1 && step <= e.s2) || (step > e.s3 && step <= e.s4))
		draw_line(e, center, r);
	});
	//draw_line(lines[1]);
	minstep = 1;
	step += minstep;
	if (step >= 360)
		step = minstep;
	//step = 70;
	text.innerHTML = "step = "+step;
}

window.addEventListener("load", setup);
